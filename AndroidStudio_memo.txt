JDK最新版のインストール
AndroidStudioの最新版をインストール

[Android Studioの設定]
システム環境変数に
変数：JAVA_HOME
値　：jdkの場所（C:Program Files\Java\jdk1.8.0_25）とか

変数：Path
値　：SDKの場所(C:\Android\sdk\platform-tools;)とか先頭に追加


[エミュレータの設定]
コマンドプロンプト(管理者)で
regedit[Enter]
レジストリエディタが起動する

HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Android SDK Tools
右のウィンドウにPathというのが出てくるからダブルクリックで開き
値をSDKの場所に変える(C:\Android\sdk)とか

プロジェクトはAPI 15 で94%カバーできるからこれでいい
Android2.xは捨てる

app/main/res/layout/activity_main.xmlが本体
app/main/java/ドメイン名逆さ表示/MainActivity.javaがJAVA本体

//idを拾ってきてButtonとして認識する
	buttonPushMe = (Button) findViewById(R.id.btn_pushme);

//R = リソース

//画像ファイルをプロジェクトに追加
	res/drawable-xxhdpiというディレクトリを作成しドラッグドロップ
	呼ぶときは
	R.drawable.名前(拡張子はいらない)

	match_parent = 画面いっぱいにマッチするように

	Toast = 画面に少しでて、すぐ消える

	ネットワーク通信はメインスレッドから実行すると強制終了する
	→別スレッドで通信する

	UI表示変更などはメインスレッドからやらないとダメ


//String... params
	ドット3つで可変長引数

//HttpConectionによるHTTP接続およびJSONデータ取得(リクエスト・レスポンス)
	private static final String URL = "http://weather.livedoor.com/forecast/webservice/json/v1?city=";
	    public static String getWeather(String pointId) throws IOException {
       		// リクエスト送信
       		URL requestUrl = new URL(URL + pointId);
        	HttpURLConnection connection;
        	connection = (HttpURLConnection) requestUrl.openConnection();
        	InputStream input = connection.getInputStream();

        	// 結果取得
        	BufferedReader reader = new BufferedReader(new InputStreamReader(
                	input, "UTF-8"));
        	String line = reader.readLine();
        	StringBuilder tmpResult = new StringBuilder(line);

        	reader.close();
        	//return line;これでもOKっぽい
        	return tmpResult.toString();
    	}

//AsyncTask<Params, Progress, Result>
	private class DownloadFilesTask extends AsyncTask<URL, Integer, Long> {
     		protected Long doInBackground(URL... urls) {
        		int count = urls.length;
         		long totalSize = 0;
         		for (int i = 0; i < count; i++) {
             			totalSize += Downloader.downloadFile(urls[i]);
             			publishProgress((int) ((i / (float) count) * 100));
             			// Escape early if cancel() is called
             			if (isCancelled()) break;
         		}
         		return totalSize;
     		}

     		protected void onProgressUpdate(Integer... progress) {
        		setProgressPercent(progress[0]);
     		}

     		protected void onPostExecute(Long result) {
         		showDialog("Downloaded " + result + " bytes");
     		}
 	}
	AsyncTask<パラメーターを渡す, 処理中(Voidで無視), 出てくる値型>

	教科書
	AsyncTask<String, Void, String>

//文字の大きさ
	sp = ユーザーのフォントサイズに合わせていい感じにしてくれる
	dp = ユーザーのフォントサイズでは変わらない
	px = ピクセル

//入力文字取得
	protected void onCreate(Bundle savedInstanceState) {
		final EditText ev = new EditText(this);
		pushSubmit.setOnClickListener(new View.OnClickListener() {
           	@Override
           		public void onClick(View v) {
                		//String型の変数に入力された文字を代入する
                		String str = ev.getText().toString();
			}
		});
	}


		

